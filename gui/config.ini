[kivy]
keyboard_repeat_delay = 300
keyboard_repeat_rate = 30
log_dir = logs
log_enable = 1
log_level = info
log_name = kivy_%y-%m-%d_%_.txt
window_icon =
keyboard_mode =
keyboard_layout = qwerty
desktop = 1
exit_on_escape = 1
pause_on_minimize = 0
config_version = 15

; desktop= int, 0 or 1
;    This option controls desktop OS specific features, such as enabling
;    drag-able scroll-bar in scroll views, disabling of bubbles in
;    TextInput etc. 0 is disabled, 1 is enabled.
; exit_on_escape= int, 0 or 1
;    Enables exiting kivy when escape is pressed.
;    0 is disabled, 1 is enabled.
; pause_on_minimize= int, 0 or 1
;    If set to `1`, the main loop is paused and the `on_pause` event
;    is dispatched when the window is minimized. This option is intended
;    for desktop use only. Defaults to `0`.
; keyboard_layout= string
;    Identifier of the layout to use.
; keyboard_mode= string
;    Specifies the keyboard mode to use. If can be one of the following:
;    * '' - Let Kivy choose the best option for your current platform.
;    * 'system' - real keyboard.
;    * 'dock' - one virtual keyboard docked to a screen side.
;    * 'multi' - one virtual keyboard for every widget request.
;    * 'systemanddock' - virtual docked keyboard plus input from real
;      keyboard.
;    * 'systemandmulti' - analogous.
; log_dir= string
;    Path of log directory.
; log_enable= int, 0 or 1
;    Activate file logging. 0 is disabled, 1 is enabled.
; log_level= string, one of |log_levels|
;    Set the minimum log level to use.
; log_name= string
;    Format string to use for the filename of log file.


[graphics]
display = -1
fullscreen = 1
height = 480
left = 0
maxfps = 60
multisamples = 2
position = auto
rotation = 0
show_cursor = 0
top = 0
width = 800
resizable = 0
borderless = 1
window_state = minimized
minimum_width = 0
minimum_height = 0
min_state_time = .035

[input]
; mouse = mouse
mtdev_%(name)s = probesysfs,provider=mtdev,param=invert_x=0,param=invert_y=0
; hid_%(name)s = probesysfs,provider=hidinput,param=invert_x=1,param=invert_y=1

[postproc]
double_tap_distance = 20
double_tap_time = 250
ignore = []
jitter_distance = 0
jitter_ignore_devices = mouse,mactouch,
retain_distance = 50
retain_time = 0
triple_tap_distance = 20
triple_tap_time = 375

[widgets]
scroll_timeout = 250
scroll_distance = 20
scroll_friction = 1.
scroll_stoptime = 300
scroll_moves = 5

[modules]





; :kivy:

;     `desktop`: int, 0 or 1
;         This option controls desktop OS specific features, such as enabling
;         drag-able scroll-bar in scroll views, disabling of bubbles in
;         TextInput etc. 0 is disabled, 1 is enabled.
;     `exit_on_escape`: int, 0 or 1
;         Enables exiting kivy when escape is pressed.
;         0 is disabled, 1 is enabled.
;     `pause_on_minimize`: int, 0 or 1
;         If set to `1`, the main loop is paused and the `on_pause` event
;         is dispatched when the window is minimized. This option is intended
;         for desktop use only. Defaults to `0`.
;     `keyboard_layout`: string
;         Identifier of the layout to use.
;     `keyboard_mode`: string
;         Specifies the keyboard mode to use. If can be one of the following:

;         * '' - Let Kivy choose the best option for your current platform.
;         * 'system' - real keyboard.
;         * 'dock' - one virtual keyboard docked to a screen side.
;         * 'multi' - one virtual keyboard for every widget request.
;         * 'systemanddock' - virtual docked keyboard plus input from real
;           keyboard.
;         * 'systemandmulti' - analogous.
;     `log_dir`: string
;         Path of log directory.
;     `log_enable`: int, 0 or 1
;         Activate file logging. 0 is disabled, 1 is enabled.
;     `log_level`: string, one of |log_levels|
;         Set the minimum log level to use.
;     `log_name`: string
;         Format string to use for the filename of log file.

;     `log_maxfiles`: int
;         Keep log_maxfiles recent logfiles while purging the log directory. Set
;         'log_maxfiles' to -1 to disable logfile purging (eg keep all logfiles).

;         .. note::
;             You end up with 'log_maxfiles + 1' logfiles because the logger
;             adds a new one after purging.

;     `window_icon`: string
;         Path of the window icon. Use this if you want to replace the default
;         pygame icon.

; :postproc:

;     `double_tap_distance`: float
;         Maximum distance allowed for a double tap, normalized inside the range
;         0 - 1000.
;     `double_tap_time`: int
;         Time allowed for the detection of double tap, in milliseconds.
;     `ignore`: list of tuples
;         List of regions where new touches are ignored.
;         This configuration token can be used to resolve hotspot problems
;         with DIY hardware. The format of the list must be::

;             ignore = [(xmin, ymin, xmax, ymax), ...]

;         All the values must be inside the range 0 - 1.
;     `jitter_distance`: int
;         Maximum distance for jitter detection, normalized inside the range 0
;         - 1000.
;     `jitter_ignore_devices`: string, separated with commas
;         List of devices to ignore from jitter detection.
;     `retain_distance`: int
;         If the touch moves more than is indicated by retain_distance, it will
;         not be retained. Argument should be an int between 0 and 1000.
;     `retain_time`: int
;         Time allowed for a retain touch, in milliseconds.
;     `triple_tap_distance`: float
;         Maximum distance allowed for a triple tap, normalized inside the range
;         0 - 1000.
;     `triple_tap_time`: int
;         Time allowed for the detection of triple tap, in milliseconds.

; :graphics:
;     `borderless`: int , one of 0 or 1
;         If set to `1`, removes the window border/decoration. Window resizing
;         must also be disabled to hide the resizing border.
;     `window_state`: string , one of 'visible', 'hidden', 'maximized'
;                     or 'minimized'

;         Sets the window state, defaults to 'visible'. This option is available
;         only for the SDL2 window provider and it should be used on desktop
;         OSes.
;     `fbo`: string, one of 'hardware', 'software' or 'force-hardware'
;         Selects the FBO backend to use.
;     `fullscreen`: int or string, one of 0, 1, 'fake' or 'auto'
;         Activate fullscreen. If set to `1`, a resolution of `width`
;         times `height` pixels will be used.
;         If set to `auto`, your current display's resolution will be
;         used instead. This is most likely what you want.
;         If you want to place the window in another display,
;         use `fake`, or set the `borderless` option from the graphics section,
;         then adjust `width`, `height`, `top` and `left`.
;     `height`: int
;         Height of the :class:`~kivy.core.window.Window`, not used if
;         `fullscreen` is set to `auto`.
;     `left`: int
;         Left position of the :class:`~kivy.core.window.Window`.
;     `maxfps`: int, defaults to 60
;         Maximum FPS allowed.

;         .. warning::
;             Setting maxfps to 0 will lead to max CPU usage.

;     'multisamples': int, defaults to 2
;         Sets the `MultiSample Anti-Aliasing (MSAA)
;         <http://en.wikipedia.org/wiki/Multisample_anti-aliasing>`_ level.
;         Increasing this value results in smoother graphics but at the cost of
;         processing time.

;         .. note::
;            This feature is limited by device hardware support and will have no
;            effect on devices which do not support the level of MSAA requested.

;     `position`: string, one of 'auto' or 'custom'
;         Position of the window on your display. If `auto` is used, you have no
;         control of the initial position: `top` and `left` are ignored.
;     `show_cursor`: int, one of 0 or 1
;         Set whether or not the cursor is shown on the window.
;     `top`: int
;         Top position of the :class:`~kivy.core.window.Window`.
;     `resizable`: int, one of 0 or 1
;         If 0, the window will have a fixed size. If 1, the window will be
;         resizable.
;     `rotation`: int, one of 0, 90, 180 or 270
;         Rotation of the :class:`~kivy.core.window.Window`.
;     `width`: int
;         Width of the :class:`~kivy.core.window.Window`, not used if
;         `fullscreen` is set to `auto`.
;     `minimum_width`: int
;         Minimum width to restrict the window to. (sdl2 only)
;     `minimum_height`: int
;         Minimum height to restrict the window to. (sdl2 only)
;     `min_state_time`: float, defaults to .035
;         Minimum time for widgets to display a given visual state.
;         This attrib is currently used by widgets like
;         :class:`~kivy.uix.dropdown.DropDown` &
;         :class:`~kivy.uix.behaviors.buttonbehavior.ButtonBehavior` to
;         make sure they display their current visual state for the given
;         time.
;     `kivy_clock`: one of `default`, `interrupt`, `free_all`, `free_only`
;         The clock type to use with kivy. See :mod:`kivy.clock`.

;     `default_font`: list
;         Default fonts used for widgets displaying any text. It defaults to
;         ['Roboto', 'data/fonts/Roboto-Regular.ttf',
;         'data/fonts/Roboto-Italic.ttf', 'data/fonts/Roboto-Bold.ttf',
;         'data/fonts/Roboto-BoldItalic.ttf'].

;     `allow_screensaver`: int, one of 0 or 1, defaults to 1
;         Allow the device to show a screen saver, or to go to sleep
;         on mobile devices. Only works for the sdl2 window provider.

; :input:

;     You can create new input devices using this syntax::

;         # example of input provider instance
;         yourid = providerid,parameters

;         # example for tuio provider
;         default = tuio,127.0.0.1:3333
;         mytable = tuio,192.168.0.1:3334

;     .. seealso::

;         Check the providers in :mod:`kivy.input.providers` for the syntax to
;         use inside the configuration file.

; :widgets:

;     `scroll_distance`: int
;         Default value of the
;         :attr:`~kivy.uix.scrollview.ScrollView.scroll_distance`
;         property used by the :class:`~kivy.uix.scrollview.ScrollView` widget.
;         Check the widget documentation for more information.

;     `scroll_friction`: float
;         Default value of the
;         :attr:`~kivy.uix.scrollview.ScrollView.scroll_friction`
;         property used by the :class:`~kivy.uix.scrollview.ScrollView` widget.
;         Check the widget documentation for more information.

;         .. deprecated:: 1.7.0
;             Please use
;             :class:`~kivy.uix.scrollview.ScrollView.effect_cls` instead.

;     `scroll_timeout`: int
;         Default value of the
;         :attr:`~kivy.uix.scrollview.ScrollView.scroll_timeout`
;         property used by the  :class:`~kivy.uix.scrollview.ScrollView` widget.
;         Check the widget documentation for more information.

;     `scroll_stoptime`: int
;         Default value of the
;         :attr:`~kivy.uix.scrollview.ScrollView.scroll_stoptime`
;         property used by the :class:`~kivy.uix.scrollview.ScrollView` widget.
;         Check the widget documentation for more information.

;         .. deprecated:: 1.7.0
;             Please use
;             :class:`~kivy.uix.scrollview.ScrollView.effect_cls` instead.

;     `scroll_moves`: int
;         Default value of the
;         :attr:`~kivy.uix.scrollview.ScrollView.scroll_moves`
;         property used by the :class:`~kivy.uix.scrollview.ScrollView` widget.
;         Check the widget documentation for more information.

;         .. deprecated:: 1.7.0
;             Please use
;             :class:`~kivy.uix.scrollview.ScrollView.effect_cls` instead.

; :modules:

;     You can activate modules with this syntax::

;         modulename =

;     Anything after the = will be passed to the module as arguments.
;     Check the specific module's documentation for a list of accepted
;     arguments.
